package net.jhl.control
{
	import mx.core.UIComponent;
	
	import net.jhl.view.GuestProfileMediator;
	import net.jhl.view.GuestProfileView;
	import net.jwt.event.NotificationArguments;
	import net.jwt.view.MainView;
	import net.jwt.view.popup.JWTPopUp;
	import net.jwt.view.popup.JWTPopUpCanvas;
	
	import org.puremvc.as3.interfaces.INotification;
	import org.puremvc.as3.patterns.command.SimpleCommand;
	
	public class GuestProfileCommand extends SimpleCommand
	{
		private var _mediator:GuestProfileMediator;
		private var _view:GuestProfileView;
		private var _args:UIComponent;
		
		override public function execute(notification:INotification):void
		{
			
			var args:NotificationArguments = notification.getBody() as NotificationArguments;
			if (null != args){
			var app:Object;
			this._view     = new GuestProfileView();
			
			var mediator:GuestProfileMediator 	= new GuestProfileMediator(_view,args);
			this._mediator = new GuestProfileMediator(_view,args);
				
				if (null != args){
					try
					{
						
						if((args.viewComponent as MainView) != null)
						{
							app = args.viewComponent as MainView;
							facade.registerMediator(mediator);
							app.applicationPanel.removeAllChildren();
							app.applicationPanel.addChild(_view);
						}
						else if((args.viewComponent as JWTPopUp) != null)
						{
							app = args.viewComponent as JWTPopUp;
							facade.registerMediator(mediator);
							app.addChild(_view);
						}
						else if((args.viewComponent as JWTPopUpCanvas) != null)
						{
							app = args.viewComponent as JWTPopUpCanvas;
							facade.registerMediator(mediator);
							app.canvas_body.addChild(_view);
						}
					}catch(e:Error)
				{}
			}
				
				
			}
			
		}
		public function GuestProfileCommand():void
		{
			//Alert.show("DailyGraphPriceBasedMediator command");
		}
	}
}