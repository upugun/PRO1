package net.jwt.control
{
	import mx.core.UIComponent;
	
	import net.jwt.event.INotificationArguments;
	import net.jwt.view.MainView;
	import net.jwt.view.MenuPanelMediator;
	import net.jwt.view.MenuPanelView;
	import net.jwt.view.popup.JWTPopUp;
	import net.jwt.view.popup.JWTPopUpCanvas;
	
	import org.puremvc.as3.interfaces.INotification;
	import org.puremvc.as3.patterns.command.SimpleCommand;
	
	public class MenuPanelCommand extends SimpleCommand
	{
		private var _mediator:MenuPanelMediator;
		private var _view:MenuPanelView;
		private var _args:UIComponent;
		
		override public function execute(notification:INotification):void
		{
			var args:INotificationArguments = notification.getBody() as INotificationArguments;
			
			if (null != args){
				var app:Object;
				var view:MenuPanelView   	= new MenuPanelView;
				var mediator:MenuPanelMediator 	= new MenuPanelMediator(view,args);
			
				this._mediator = mediator;
				this._args     = args as UIComponent;
				this._view     = view;
				
				
				if((args.viewComponent as MainView) != null)
				{
					app = args.viewComponent as MainView;
					facade.registerMediator(mediator);
					app.applicationPanel.removeAllChildren();
					app.applicationPanel.addChild(view);
				}
				if((args.viewComponent as JWTPopUp) != null)
				{
					app = args.viewComponent as JWTPopUp;
					facade.registerMediator(mediator);
					app.applicationPanel.removeAllChildren();
					app.applicationPanel.addChild(_view);
				}
				else if((args.viewComponent as JWTPopUpCanvas) != null)
				{
					app = args.viewComponent as JWTPopUpCanvas;
						facade.registerMediator(mediator);
						app.canvas_body.addChild(_view);
					
				}
			}
		}
		public function MenuPanelCommand()
		{
			//Alert.show("Login command");
		}
		
	}
}