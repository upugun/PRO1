package net.jwt.control
{
	import mx.core.UIComponent;
	
	import net.jwt.event.INotificationArguments;
	import net.jwt.view.EnquiryEntryMediator;
	import net.jwt.view.EnquiryEntryView;
	import net.jwt.view.MainView;
	
	import org.puremvc.as3.interfaces.INotification;
	import org.puremvc.as3.patterns.command.SimpleCommand;
	
	public class EnquiryManagementCommand extends SimpleCommand
	{
		private var _mediator:EnquiryEntryMediator;
		private var _view:EnquiryEntryView;
		private var _args:UIComponent;
		
		override public function execute(notification:INotification):void
		{
			var args:INotificationArguments = notification.getBody() as INotificationArguments;
			
			if (null != args){
				var app:MainView 					= args.viewComponent as MainView;
				var view:EnquiryEntryView  	= new EnquiryEntryView;
				//When mediator is assigned, it start setting up the view and mediator in Meditor.as
				var mediator:EnquiryEntryMediator 	= new EnquiryEntryMediator(view,args);
			
				this._mediator = mediator;
				this._args     = args as UIComponent;
				this._view     = view;
				
				facade.registerMediator(mediator);
				app.applicationPanel.removeAllChildren();
				app.applicationPanel.addChild(view);
			}
		}
		public function EnquiryManagementCommand():void
		{
			//Alert.show("DailyGraphPriceBasedMediator command");
		}
	}
}