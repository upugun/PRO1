package net.jhl.view
{
	import flash.events.Event;
	import flash.events.MouseEvent;
	
	import mx.collections.ArrayCollection;
	import mx.controls.ComboBox;
	import mx.controls.DateField;
	import mx.controls.TextInput;
	import mx.core.UIComponent;
	import mx.events.ListEvent;
	import mx.messaging.messages.ErrorMessage;
	import mx.rpc.events.FaultEvent;
	import mx.rpc.events.ResultEvent;
	
	import net.jhl.value.objects.RateCode.OtherCostsMaster;
	import net.jwt.event.INotificationArguments;
	import net.jwt.event.NotificationArguments;
	import net.jwt.view.MainView;
	import net.jwt.view.Mediator;

	
	public class OtherCostEntryMediator extends Mediator
	{
		private var _view:OtherCostEntryView;
		private var _args:INotificationArguments;
		
		private var comboBox:ComboBox = new ComboBox;
		private	var textBox:TextInput = new TextInput;
		private	var date:DateField	  = new DateField;
		
		private var obejctsList:ArrayCollection 		= new ArrayCollection; 
		private var otherCostCodeList:ArrayCollection 	= new ArrayCollection; 
		private var otherCostTypeList:ArrayCollection 	= new ArrayCollection; 
		private var _mainView:MainView;

		[Bindable]public var args:NotificationArguments = new NotificationArguments();
		
		public function OtherCostEntryMediator(view:UIComponent, args:INotificationArguments)
		{
			super(view);
			if(view != null)
			{
				_view  = view as OtherCostEntryView ;
				
			}
			
			_mainView	  = (args.viewComponent as MainView);
			
			if(args != null){
				_args = args;
				_loggedInUser = (_args.viewComponent as MainView).user;
			}
		}
		
		protected override function viewComponentInitialize():void{
			setLoggedInUser();
			loadObjects();
			loadOtherCostCode();
			loadOtherCostType();
			_view.B_save.addEventListener(MouseEvent.CLICK, saveItemHandler);
			_view.DG_list.addEventListener(ListEvent.ITEM_CLICK, showSelectedItem);
			_view.B_new.addEventListener(MouseEvent.CLICK, addNewHandler);
		}
		
		private function addNewHandler(e:Event):void
		{
			addNew();
		}
		
		private function addNew():void
		{
			_view.otherCost = new OtherCostsMaster;
			_view.B_status.setJLabel(JWHConstants.STATUS_LABLE_ACTIVE);
			
			_view.CMB_code.selectedItem = null;
			_view.CMB_type.selectedItem = null;
		}
		
		private function showSelectedItem(e:Event):void
		{
			_view.otherCost = _view.DG_list.selectedItem as OtherCostsMaster;
			_view.B_status.setJLabel(_view.otherCost.status);
			
			_view.CMB_type.selectedIndex = setComboSelectedItemById(otherCostTypeList, "uuid", _view.otherCost.changeType);
			_view.CMB_code.selectedIndex = setComboSelectedItemById(otherCostCodeList, "uuid", _view.otherCost.changeItemCode);
			
			
		}
		
		private function setLoggedInUser():void
		{
			initializeRCOtherCostsMasterRemortingObject();
			rc_otherCostMasterRO.setLogedInUser(_loggedInUser);
			
			initializeApplicationSettingsHelperRemortingObject();
		}
		
		private function loadObjects():void
		{
			startBusyCursor();
			rc_otherCostMasterRO.dynamicSearch("","");
		}
		
		private function loadOtherCostCode():void
		{
			startBusyCursor();
			applicationSettingsHelperRO.getOtherCostCode();
		}
		
		private function loadOtherCostType():void
		{
			startBusyCursor();
			applicationSettingsHelperRO.getOtherCostType();
		}
		
		private function saveItemHandler(e:Event):void
		{
			saveItem();
		}
		
		private function saveItem():void
		{
			
				
			_view.otherCost.status = _view.B_status.status;	
			
			if(_view.CMB_type.selectedItem!=null)
				_view.otherCost.changeType = _view.CMB_type.selectedItem.uuid
			
			if(_view.CMB_code.selectedItem!=null)
				_view.otherCost.changeItemCode = _view.CMB_code.selectedItem.uuid	
				
				
			_view.otherCost.timeStamp.createdById 		= _loggedInUser.uuid;
			_view.otherCost.timeStamp.createdByName 	= _loggedInUser.userName;
			
			_view.otherCost.timeStamp.updatedById 		= _loggedInUser.uuid;
			_view.otherCost.timeStamp.updatedByName 	= _loggedInUser.userName;	
			
			var temp:ArrayCollection = new ArrayCollection;
				temp.addItem(_view.otherCost);
				startBusyCursor();
			rc_otherCostMasterRO.create(temp);
		}
		
		
		public override function rateCodeOtherCostMasterCreateResultsHandler (event:ResultEvent):void
		{	
			activityAknowladgment();
			stoptBusyCursor();
			addNew();
			loadObjects();
		}
		
		public override function rateCodeOtherCostMasterFetchResultsHandler (event:ResultEvent):void
		{	
			stoptBusyCursor();
			obejctsList	=	new ArrayCollection;
			obejctsList	=	event.result as ArrayCollection;
			
			_view.DG_list.dataProvider = obejctsList;
			
		}
		
		public override function constantOtherCostCodeResultsHandler (event:ResultEvent):void
		{	
			stoptBusyCursor();
			otherCostCodeList	=	new ArrayCollection;
			otherCostCodeList	=	event.result as ArrayCollection;
			_view.CMB_code.dataProvider = otherCostCodeList;
		}
		
		public override function constantOtherCostTypeResultsHandler (event:ResultEvent):void
		{	
			stoptBusyCursor();
			otherCostTypeList	=	new ArrayCollection;
			otherCostTypeList	=	event.result as ArrayCollection;
			_view.CMB_type.dataProvider = otherCostTypeList;
		}
		
	public override function faultHandler(event:FaultEvent):void {
			stoptBusyCursor();
			var error:ErrorMessage	=	event.message as ErrorMessage;
			
			handleFaultMessage(error);
		}
		
		private function activityAknowladgment():void
		{
			createJHAlert(_view, "Record saved Successfully");
		}
		
	}
}