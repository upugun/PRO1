package net.jhl.control.helper
{
	import mx.core.UIComponent;
	
	import net.jhl.view.helper.HelperPropertyMediator;
	import net.jhl.view.helper.HelperPropertyView;
	import net.jwt.event.NotificationArguments;
	import net.jwt.view.MainView;
	import net.jwt.view.popup.JWTPopUp;
	import net.jwt.view.popup.JWTPopUpCanvas;
	
	import org.puremvc.as3.interfaces.INotification;
	import org.puremvc.as3.patterns.command.SimpleCommand;
	
	public class HelperPropertyCommand extends SimpleCommand
	{
		private var _mediator:HelperPropertyMediator;
		private var _view:HelperPropertyView;
		private var _args:UIComponent;
		
		override public function execute(notification:INotification):void
		{
			var app:Object;
			var args:NotificationArguments = notification.getBody() as NotificationArguments;
			this._view     = new HelperPropertyView();
			
			var mediator:HelperPropertyMediator 	= new HelperPropertyMediator(_view,args);
			this._mediator = new HelperPropertyMediator(_view,args);
			
			
			if (null != args){
				try
				{
					
					if((args.viewComponent as MainView) != null)
					{
						app = args.viewComponent as MainView;
						facade.registerMediator(mediator);
						app.applicationPanel.removeAllChildren();
						app.applicationPanel.addChild(_view);
					}
					else if((args.viewComponent as JWTPopUp) != null)
					{
						app = args.viewComponent as JWTPopUp;
						facade.registerMediator(mediator);
						app.addChild(_view);
					}
					else if((args.viewComponent as JWTPopUpCanvas) != null)
					{
						app = args.viewComponent as JWTPopUpCanvas;
						facade.registerMediator(mediator);
						app.canvas_body.addChild(_view);
					}
				}catch(e:Error)
				{}
			}
		}
		public function HelperPropertyCommand():void
		{
			//Alert.show("DailyGraphPriceBasedMediator command");
		}
	}
}